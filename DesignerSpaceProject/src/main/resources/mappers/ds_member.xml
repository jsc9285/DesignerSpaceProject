<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
 "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="com.project.member">
	
	<resultMap type="com.project.member.model.MemberDto" 
		id="memberResultMap">
		<id column="MEMBER_NO" property="member_no"/>
		<result column="MEMBER_NICK" property="member_nick"/>
		<result column="MEMBER_NAME" property="member_name"/>
		<result column="MEMBER_EMAIL" property="member_email"/>
		<result column="MEMBER_PWD" property="member_pwd"/>
		<result column="MEMBER_PHONE" property="member_phone"/>
		<result column="MEMBER_CHECK_QUESTION" property="member_check_question"/>
		<result column="MEMBER_CHECK_ANSWER" property="member_check_answer"/>
		<result column="MEMBER_COMMENTS" property="member_comments"/>
		<result column="MEMBER_CRE_DATE" property="member_cre_date"
			javaType="java.util.Date"/>
		<result column="MEMBER_MOD_DATE" property="member_mod_date"
			javaType="java.util.Date"/>
		<result column="MEMBER_SIGN_CHECK" property="member_sign_check"/>
		<result column="MEMBER_GRADE" property="member_grade"/>
		<result column="MEMBER_DEL_FLAG" property="member_del_flag"/>
		
		<result column="profile_table_no" property="profile_table_no"/>
		<result column="profile_table_mno" property="profile_table_mno"/>
		<result column="profile_table_original_name" property="profile_table_original_name"/>
		<result column="profile_table_stored_name" property="profile_table_stored_name"/>
	</resultMap>
	
	
	<select id="memberExist" parameterType="map" 
		resultMap="memberResultMap">
		
		SELECT M.MEMBER_NO, M.MEMBER_NICK, PT.PROFILE_TABLE_STORED_NAME, M.MEMBER_GRADE
		FROM MEMBER M LEFT JOIN PROFILE_TABLE PT
        ON MEMBER_NO = PROFILE_TABLE_MNO
		WHERE M.MEMBER_EMAIL = #{member_email}
		AND M.MEMBER_PWD = #{member_pwd}
	</select>
	
	<select id="memberIdFind" parameterType="map" 
		resultMap="memberResultMap">
		SELECT MEMBER_EMAIL
		FROM MEMBER
		WHERE MEMBER_NAME = #{member_name}
		AND MEMBER_PHONE = #{member_phone}
	</select>
	
	<select id="memberPwdFind" parameterType="map" 
		resultMap="memberResultMap">
		SELECT MEMBER_Pwd
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{member_email}
		AND MEMBER_CHECK_QUESTION = #{member_check_question}
		AND MEMBER_CHECK_ANSWER = #{member_check_answer}
	</select>
	
	<insert id="memberAdd" parameterType="com.project.member.model.MemberDto"
		useGeneratedKeys="true" keyProperty="member_no">
		<selectKey keyProperty="member_no" resultType="int" order="BEFORE">
			SELECT MEMBER_MNO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO MEMBER
		VALUE(MEMBER_NO,MEMBER_NAME,MEMBER_NICK,MEMBER_EMAIL,MEMBER_PWD,MEMBER_PHONE,MEMBER_CHECK_QUESTION,
			MEMBER_CHECK_ANSWER,MEMBER_COMMENTS, MEMBER_CRE_DATE, MEMBER_SIGN_CHECK)
		VALUES(#{member_no}, #{member_name}, #{member_nick}, #{member_email}, #{member_pwd}, #{member_phone}, 
			#{member_check_question}, #{member_check_answer}, #{member_comments}, SYSDATE, #{member_sign_check})
		
	</insert>
	
	<select id="memberList" resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_NICK, MEMBER_NAME, MEMBER_EMAIL, MEMBER_CRE_DATE
		FROM MEMBER
	</select>
	
	<insert id="profileAdd" parameterType="map">
		INSERT INTO PROFILE_TABLE
			(PROFILE_TABLE_NO, PROFILE_TABLE_MNO, PROFILE_TABLE_ORIGINAL_NAME, PROFILE_TABLE_STORED_NAME)
		VALUES(
			profile_table_ptno_SEQ.nextval, #{profile_table_mno}, #{profile_table_original_name},
			#{profile_table_stored_name}
		)
	</insert>
	
	<select id="memberInfo" parameterType="int" 
		resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_NICK, MEMBER_EMAIL, MEMBER_NAME, MEMBER_PHONE, PROFILE_TABLE_STORED_NAME,
			MEMBER_COMMENTS
		FROM MEMBER LEFT JOIN PROFILE_TABLE 
        ON MEMBER_NO = PROFILE_TABLE_MNO
		WHERE MEMBER_NO =#{member_no}
	</select>
	
	<select id="memberMod" parameterType="int" 
		resultMap="memberResultMap">
		SELECT MEMBER_PWD
		FROM MEMBER
		WHERE MEMBER_NO =#{member_no}
	</select>
	
	<select id="memberModDetail" parameterType="int" 
		resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_NAME, Member_Nick, Member_Email, MEMBER_PWD, MEMBER_PHONE, 
    		MEMBER_Check_Question, MEMBER_Check_Answer, PROFILE_TABLE_ORIGINAL_NAME, 
    		PROFILE_TABLE_STORED_NAME, MEMBER_COMMENTS
		FROM MEMBER LEFT JOIN PROFILE_TABLE
		ON MEMBER_NO = PROFILE_TABLE.PROFILE_TABLE_MNO
		WHERE MEMBER_No = #{member_no}
	</select>
	
	<update id="memberUpdate" parameterType="com.project.member.model.MemberDto">
		UPDATE MEMBER
		<set>
			 MEMBER_NAME =#{member_name} , MEMBER_NICK= #{member_nick}, MEMBER_EMAIL=#{member_email}, 
			 MEMBER_PWD=#{member_pwd}, MEMBER_PHONE=#{member_phone},MEMBER_CHECK_QUESTION=#{member_check_question},
			 MEMBER_CHECK_ANSWER=#{member_check_answer}, MEMBER_COMMENTS=#{member_comments}, MEMBER_MOD_DATE = SYSDATE
		</set>
		WHERE MEMBER_NO =#{member_no}
	</update>
	
	<delete id="profileDelete" parameterType="int">
			DELETE FROM PROFILE_TABLE
			WHERE PROFILE_TABLE_MNO = #{profile_table_mno}
	</delete>
	
	<select id="profileSelectStoredFileName" parameterType="int"
		resultType="map">
		SELECT profile_table_no, profile_table_stored_name
		FROM PROFILE_TABLE
		WHERE profile_table_mno = #{profile_table_mno}
	</select>
	
</mapper>